
problem2-
OBJECT RELATIONAL SCHEMA
An Object relational model is a combination of a Object oriented database model and a Relational database model. So, it supports objects, classes, inheritance etc. just like Object Oriented models and has support for data types, tabular structures etc. like Relational data model.

Advantages of Object Relational model
The advantages of the Object Relational model are âˆ’

Inheritance

The Object Relational data model allows its users to inherit objects, tables etc. so that they can extend their functionality. Inherited objects contains new attributes as well as the attributes that were inherited. 

Complex Data Types

Complex data types can be formed using existing data types. This is useful in Object relational data model as complex data types allow better manipulation of the data.

Extensibility

The functionality of the system can be extended in Object relational data model. This can be achieved using complex data types as well as advanced concepts of object oriented model such as inheritance.


PROBLEM 3 - 
1. use Mongo_DB_Project
2.
3. bd.createCollection('order')
   bd.createCollection('categories')
   bd.createCollection('customers')



4. db.order.insert([
{
	
	"order_id": "ORD001",
	"orderer_name": "John",
	"category": {
	"category_id": "CAT001",
	"category_name": "mobile"
	},
	"brand": 
	{
	"brand_id": "BRN002",
	"brand_name": "Samsung",
	},
	"items":
	{
	"item id": "005",
	"item name": "Samsung Galaxy J7",
	"price": 11890
	},
	"order_date": "12-12-2017",
	"shipping_date": "17-12-2017"
},
{
	"order_id": "ORD002",
	"orderer_name": "James",
	"category": {
	"category_id": "CAT003",
	"category_name": "TV",
	}
	"brands": 
	{
	"brand_id": "BRN006",
	"brand_name": "Philips",
    }
	"items":
	{
	"item id": "021",
	"item name": "32PFL3931/V7",
	"price": 15999
	},
	"order_date": "23-12-2017",
	"shipping_date": "27-12-2017"
    
},
{
	"order_id": "ORD003",
	"orderer_name": "John",
	"category": {
	"category_id": "CAT001",
	"category_name": "mobile"
	},
	"brand": 
	{
	"brand_id": "BRN002",
	"brand_name": "Samsung",
	},
	"items":
	{
	"item id": "005",
	"item name": "Samsung Galaxy J7",
	"price": 11890
	},
	"order_date": "12-12-2017",
	"shipping_date": "17-12-2017"
},
{
	"order_id": "ORD004",
	"orderer_name": "Smith",
	"category": {
	"category_id": "CAT002",
	"category_name": "computer"
	},
	"brand": 
	{
	"brand_id": "BRN004",
	"brand_name": "Apple",
	},
	"items":
	{
	"item id": "013",
	"item name": "Apple iMac",
	"price": 82000
	},
	"order_date": "12-12-2017",
	"shipping_date": "17-12-2017"
}
])



db.categories.insert([
{
	"category_id": "CAT001",
	"category_name": "mobile",
	"brands": [
	{
	"brand_id": "BRN001",
	"brand_name": "Sony",
	"items":[
	{
	"item id": "001",
	"item name": "Xperia R1",
	"price": 13990
	},
	{
	"item id": "002",
	"item name": "Xperia XZ",
	"price": 46990
	},
	{
	"item id": "003",
	"item name": "Xperia XA",
	"price": 24990
	},
	{
	"item id": "004",
	"item name": "Xperia Z5",
	"price": 42990
	}
	]
	},
	{
	"brand_id": "BRN002",
	"brand_name": "Samsung",
	"items":[
	{
	"item id": "005",
	"item name": "Samsung Galaxy J7",
	"price": 11890
	},
	{
	"item id": "006",
	"item name": "Samsung Galaxy S8",
	"price": 52999
	},
	{
	"item id": "007",
	"item name": "Samsung Galaxy Note",
	"price": "$1000"
	},
	{
	"item id": "008",
	"item name": "Samsung Galaxy A9",
	"price": 22499
	}
	]
	}
	]
},
{
	"category_id": "CAT002",
	"category_name": "computer",
	"brands": [
	{
	"brand_id": "BRN003",
	"brand_name": "Dell",
	"items":[
	{
	"item id": "009",
	"item name": "Dell OptiPlex",
	"price": 32200
	},
	{
	"item id": "010",
	"item name": "Dell Inspiron",
	"price": 26990
	},
	{
	"item id": "011",
	"item name": "Dell AIO",
	"price": 23876
	}
	]
	},
	{
	"brand_id": "BRN004",
	"brand_name": "Apple",
	"items":[
	{
	"item id": "013",
	"item name": "Apple iMac",
	"price": 82000
	},
	{
	"item id": "014",
	"item name": "Apple MGEN2HN/A",
	"price": 52849
	}
	]
	}
	]
	},
	{
	"category_id": "CAT003",
	"category_name": "TV",
	"brands": [
	{
	"brand_id": "BRN005",
	"brand_name": "LG",
	"items":[
	{
	"item id": "017",
	"item name": "49LJ52KT",
	"price": 659990
	},
	{
	"item id": "018",
	"item name": "49LJ53IT",
	"price": 48990
	}
	]
	},
	{
	"brand_id": "BRN006",
	"brand_name": "Philips",
	"items":[
	{
	"item id": "021",
	"item name": "32PFL3931/V7",
	"price": 15999
	},
	{
	"item id": "022",
	"item name": "43PUTT7791",
	"price": 43490
	},
	{
	"item id": "023",
	"item name": "55PFL5059/V7",
	"price": 56920
	},
	]
	}
	]
	}

])



db.customers.insert({[
{
	"customer_id": "CUST001",
	"customer_name": "John",
	"contact_number": "9158385438",
	"address":
     {
         "streetAddress": "709 Honey Creek Dr.",  
 
         "city": "New York",
         "state": "NY",
         "postalCode": "10028"
     },
	"birth_date": "12-12-1993"
},
{
	"customer_id": "CUST002",
	"customer_name": "James",
	"contact_number": "9158385234",
	"address":
     {
         "streetAddress": "3 South Sherman Street Astoria",
         "city": "New York",
         "state": "NY",
         "postalCode": "11106"
     },
	"birth_date": "13-12-1994"
},
{
	"customer_id": "CUST003",
	"customer_name": "Smith",
	"contact_number": "8758385438",
	"address":
     {
         "streetAddress": "73 Pacific St. Forest Hills",
         "city": "New York",
         "state": "NY",
         "postalCode": "11375"
     },
	"birth_date": "10-12-1993"
},
{
	"customer_id": "CUST004",
	"customer_name": "Linda",
	"contact_number": "7858385438",
	"address":
     {
         "streetAddress": "812 Thatcher Court Yonkers",
         "city": "New York",
         "state": "NY",
         "postalCode": "10701"
     },
	"birth_date": "10-12-1994"
},
{
	"customer_id": "CUST004",
	"customer_name": "Mary",
	"contact_number": "7875085438",
	"address":
     {
         "streetAddress": "93 Bayport Ave. South Richmond Hill",
         "city": "New York",
         "state": "NY",
         "postalCode": "11419"
     },
	"birth_date": "10-12-1994"
}
]

})


5. db.order.find({"orderer_name": "John"})


6. db.categories.update({"category_id": "CAT002"},
{ $set:{
        "brands.0.items.0.price":33000
    }
})

//PROBLEM 4

1. Restore

mongoexport --db test --collection citId --type=json --fields _id,name,country --out citId.json

2. Import
mongoimport --db local --collection citId --file citId.json






///PROBLEM 5

OREDERS--
db.order.createIndexes({"orderer_name":1})

CATEGORIES--
db.categories.createIndexes({"category_name":1})
db.categories.createIndexes({"brand_name":1})

CUSTOMERS--
db.customer.createIndexes({"coustmer_name":1})


////PROBLEM 6
db.orders.aggregate([
	{
		$group:{
			items.$.price:{$sum:1}
		}
	}
])

///problem 7 
created a cluster in  mongoDB atlas with the name called cluster1


////PROBLEM 8

Diaognistic commands
buildInfo
collStats
connectionStatus
dbStats
explain
getLog
getMore
hostInfo


////PROBLEM 10

 mongod --port 2001 --dbpath data/rs1 --replSet --rithik --oplogSize 128
 mongod --port 2002 --dbpath data/rs2 --replSet --rithik --oplogSize 128
 mongod --port 2003 --dbpath data/rs3 --replSet --rithik --oplogSize 128

rs.initiate()
rs.add("127.0.0.1:2002")

